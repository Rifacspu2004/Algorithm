#include <stdio.h>

#define INF 999

int main() {
    int n; 
    printf("Enter number of vertices: ");
    scanf("%d", &n);

    int cost[n][n];
    printf("Enter the cost adjacency matrix (use 0 if no edge):\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &cost[i][j]);
            if (cost[i][j] == 0) cost[i][j] = INF; // no edge → INF
        }
    }

    int visited[n];
    for (int i = 0; i < n; i++) visited[i] = 0;
    visited[0] = 1; // start from vertex 0

    int edges = 0, total = 0;

    printf("\nEdges in MST:\n");
    while (edges < n - 1) {
        int u = -1, v = -1, min = INF;

        // Find the minimum edge from visited → unvisited
        for (int i = 0; i < n; i++) {
            if (visited[i]) {
                for (int j = 0; j < n; j++) {
                    if (!visited[j] && cost[i][j] < min) {
                        min = cost[i][j];
                        u = i;
                        v = j;
                    }
                }
            }
        }

        printf("%d -- %d  (weight %d)\n", u, v, min);
        visited[v] = 1;
        total += min;
        edges++;
    }

    printf("\nTotal cost of MST = %d\n", total);
    return 0;
}
